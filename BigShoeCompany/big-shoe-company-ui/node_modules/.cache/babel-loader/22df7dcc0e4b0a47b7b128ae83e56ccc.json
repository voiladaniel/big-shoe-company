{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel.voila\\\\source\\\\repos\\\\BigShoeCompany\\\\big-shoe-company-ui\\\\src\\\\Components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from \"axios\";\nimport { Alert, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload, faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { Orders } from './Orders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileUpload = () => {\n  _s();\n\n  const [errorValidation, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [printAvailable, setPrintAvailable] = useState(false);\n  const [processedOrders, setProcessedOrders] = useState([]);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileText\",\n    children: file.path\n  }, file.path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n  let formData = new FormData();\n  acceptedFiles.map(file => {\n    formData.append(\"formFile\", file);\n    formData.append(\"fileName\", file.name);\n  });\n\n  const uploadFile = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData).then(function (response) {\n        setProcessedOrders(response.data);\n        setError(false);\n        setPrintAvailable(true);\n        setIsLoading(false);\n      }).catch(function (error) {\n        if (!error.status) {\n          try {\n            const {\n              status\n            } = error.response;\n            if (status == 401) error.message = 'Unauthorized access! Please contact the Administrator!';\n          } catch {\n            setProcessedOrders([]);\n            setError(error);\n            setPrintAvailable(false);\n            setIsLoading(false);\n          } finally {\n            setProcessedOrders([]);\n            setError(error);\n            setPrintAvailable(false);\n            setIsLoading(false);\n          }\n        } else {}\n      });\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone use-pointer no-printme'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop Order xml file here, or click to select file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"no-printme\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"File selected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"no-printme\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        onClick: uploadFile,\n        className: \"use-pointer\",\n        disabled: !files.length > 0,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), \"\\xA0 Upload Custom Order\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"warning\",\n        className: \"use-pointer margin-left-20 no-printme\",\n        onClick: () => window.print(),\n        hidden: !printAvailable,\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPrint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), \"\\xA0 Print Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Orders, {\n      processedOrders: processedOrders,\n      errorValidation: errorValidation,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"P7j1tFi++tzKtY9MTDBjYgp0TNk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/daniel.voila/source/repos/BigShoeCompany/big-shoe-company-ui/src/Components/FileUpload.js"],"names":["React","useState","useRef","useDropzone","axios","Alert","Button","FontAwesomeIcon","faUpload","faPrint","Orders","FileUpload","errorValidation","setError","isLoading","setIsLoading","printAvailable","setPrintAvailable","processedOrders","setProcessedOrders","acceptedFiles","getRootProps","getInputProps","multiple","files","map","file","path","formData","FormData","append","name","uploadFile","e","preventDefault","res","post","then","response","data","catch","error","status","message","console","log","ex","className","length","window","print"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport axios from \"axios\";\r\nimport { Alert, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload, faPrint } from '@fortawesome/free-solid-svg-icons'\r\nimport { Orders } from './Orders';\r\n\r\nexport const FileUpload = () => {\r\n  const [errorValidation, setError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [printAvailable, setPrintAvailable] = useState(false);\r\n  const [processedOrders, setProcessedOrders] = useState([]);\r\n\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({ multiple: false });\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <div key={file.path} className=\"fileText\">\r\n      {file.path}\r\n    </div>\r\n  ));\r\n\r\n  let formData = new FormData()\r\n  \r\n  acceptedFiles.map(file => {\r\n    formData.append(\"formFile\", file);\r\n    formData.append(\"fileName\", file.name);\r\n  })\r\n\r\n  const uploadFile = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData)\r\n      .then(function (response) {\r\n        setProcessedOrders(response.data);\r\n        setError(false);\r\n        setPrintAvailable(true);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function(error) {\r\n        if (!error.status) {\r\n            try{\r\n                const {status} = error.response;\r\n                if(status == 401)\r\n                     error.message = 'Unauthorized access! Please contact the Administrator!'\r\n            }\r\n            catch{\r\n                setProcessedOrders([]);\r\n                setError(error);\r\n                setPrintAvailable(false);\r\n                setIsLoading(false);\r\n            }\r\n            finally{\r\n              setProcessedOrders([]);\r\n                setError(error);\r\n                setPrintAvailable(false);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        else{\r\n            \r\n        }\r\n      });\r\n      console.log(res);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone use-pointer no-printme'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop Order xml file here, or click to select file</p>\r\n      </div>\r\n      <aside className=\"no-printme\">\r\n        <h4>File selected:</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n      <aside className=\"no-printme\">\r\n        <Button variant=\"warning\" onClick={uploadFile} className=\"use-pointer\" disabled={!files.length > 0}> \r\n          <FontAwesomeIcon icon={faUpload} />\r\n          &nbsp;\r\n          Upload Custom Order\r\n        </Button>\r\n        <Button variant=\"warning\" className=\"use-pointer margin-left-20 no-printme\" onClick={() => window.print()} hidden={!printAvailable}>\r\n        &nbsp;\r\n        <FontAwesomeIcon icon={faPrint} />\r\n          &nbsp;\r\n          Print Orders\r\n        </Button>\r\n      </aside>\r\n      <Orders processedOrders={processedOrders} errorValidation={errorValidation} isLoading={isLoading}/>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}