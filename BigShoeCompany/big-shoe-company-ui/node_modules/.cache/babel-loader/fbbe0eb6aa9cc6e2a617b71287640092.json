{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel.voila\\\\source\\\\repos\\\\BigShoeCompany\\\\big-shoe-company-ui\\\\src\\\\Components\\\\Orders.js\";\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Orders = ({\n  processedOrders,\n  errorValidation,\n  isLoading,\n  networkError\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#db3d44\",\n      height: 100,\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this) : networkError ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"red-font-color\",\n        children: \"Newtwork error! Please make sure the service is up and ruunning!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", processedOrders.length ? processedOrders.map((orders, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row printme\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError ? \"green-background\" : \"red-background\"),\n          onClick: () => console.log(\"da\"),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Customer Name: \", orders.customerName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 66\n              }, this), \"Customer Email: \", orders.customerEmail, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 68\n              }, this), \"Date Required: \", orders.dateRequired, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 66\n              }, this), \"Notes: \", orders.notes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 51\n              }, this), \"Quantity: \", orders.quantity, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 57\n              }, this), \"Size: \", orders.size, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, this), orders.hasDateError ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Please enter a valid date!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), errorValidation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row no-printme\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-md-12 text-center custom-div-template use-pointer red-background\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Validation Error! Please make sure you follow the guideline:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Customer Name must be provided \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 58\n              }, this), \"Customer Email must be a valid email address \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 72\n              }, this), \"Date must be valid and at least 10 working days into the future \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 91\n              }, this), \"Size must be 11.5 to 15 including half sizes \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 72\n              }, this), \"Quantity must be in multiples of 1000 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/daniel.voila/source/repos/BigShoeCompany/big-shoe-company-ui/src/Components/Orders.js"],"names":["Loader","Orders","processedOrders","errorValidation","isLoading","networkError","length","map","orders","index","hasDateError","console","log","customerName","customerEmail","dateRequired","notes","quantity","size"],"mappings":";AACA,OAAOA,MAAP,MAAmB,sBAAnB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,SAApC;AAA+CC,EAAAA;AAA/C,CAAD,KAAmE;AACrF,sBAAO;AAAA,cACND,SAAS,gBACN,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,EAAE,GAAjD;AAAsD,MAAA,KAAK,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,YADM,GAENC,YAAY,gBACZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADY,gBAKZ;AAAA,sBAAKH,eAAe,CAACI,MAAhB,GACDJ,eAAe,CAACK,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,kBAClB;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE,sEAAsE,CAACD,MAAM,CAACE,YAAR,GAAwB,kBAAxB,GAA6C,gBAAnH,CAAhB;AAAsJ,UAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,IAAZ,CAArK;AAAA,iCACM;AAAA,oCACE;AAAA,4CACoBJ,MAAM,CAACK,YAD3B,oBACyC;AAAA;AAAA;AAAA;AAAA,sBADzC,sBAEqBL,MAAM,CAACM,aAF5B,oBAE2C;AAAA;AAAA;AAAA;AAAA,sBAF3C,qBAGoBN,MAAM,CAACO,YAH3B,oBAGyC;AAAA;AAAA;AAAA;AAAA,sBAHzC,aAIYP,MAAM,CAACQ,KAJnB,oBAI0B;AAAA;AAAA;AAAA;AAAA,sBAJ1B,gBAKeR,MAAM,CAACS,QALtB,oBAKgC;AAAA;AAAA;AAAA;AAAA,sBALhC,YAMWT,MAAM,CAACU,IANlB,oBAMwB;AAAA;AAAA;AAAA;AAAA,sBANxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EASGV,MAAM,CAACE,YAAP,gBACD;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,4BADC,gBAIK,qCAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF,SAAkCD,KAAlC;AAAA;AAAA;AAAA;AAAA,cADF,CADC,gBAqBI,qCArBT,EAuBKN,eAAe,gBACd;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE,gFAAhB;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,yEACiC;AAAA;AAAA;AAAA;AAAA,sBADjC,gEAE+C;AAAA;AAAA;AAAA;AAAA,sBAF/C,mFAGkE;AAAA;AAAA;AAAA;AAAA,sBAHlE,gEAI+C;AAAA;AAAA;AAAA;AAAA,sBAJ/C,yDAKwC;AAAA;AAAA;AAAA;AAAA,sBALxC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADc,gBAgBb,qCAvCP;AAAA;AARG,mBAAP;AAoDH,CArDM;KAAMF,M","sourcesContent":["\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport const Orders = ({ processedOrders, errorValidation, isLoading, networkError }) => {\r\n    return(<>\r\n    {isLoading ?\r\n        <Loader type=\"ThreeDots\" color=\"#db3d44\" height={100} width={100} /> :\r\n        networkError ?\r\n        <>\r\n            <br/>\r\n            <h4 className=\"red-font-color\">Newtwork error! Please make sure the service is up and ruunning!</h4>\r\n        </> :\r\n        <> { processedOrders.length?\r\n            processedOrders.map((orders, index) => (\r\n              <div className=\"row printme\" key={index}>\r\n                <div className={\"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError  ? \"green-background\" : \"red-background\")} onClick={() => console.log(\"da\")}>\r\n                      <div>\r\n                        <h6>\r\n                            Customer Name: {orders.customerName} <br/>\r\n                            Customer Email: {orders.customerEmail} <br/>\r\n                            Date Required: {orders.dateRequired} <br/>\r\n                            Notes: {orders.notes} <br/>\r\n                            Quantity: {orders.quantity} <br/>  \r\n                            Size: {orders.size} <br/>\r\n                        </h6>\r\n                        {orders.hasDateError  ? \r\n                        <>\r\n                            <br/>\r\n                            <h2>Please enter a valid date!</h2>\r\n                        </> : <></>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            )) : <></>\r\n          }\r\n           { errorValidation?\r\n              <div className=\"row no-printme\">\r\n                <div className={\"col-lg-12 col-md-12 text-center custom-div-template use-pointer red-background\"}>\r\n                    <div>\r\n                        <br/>\r\n                        <h2>Validation Error! Please make sure you follow the guideline:</h2>\r\n                        <h6>\r\n                          Customer Name must be provided <br/>\r\n                          Customer Email must be a valid email address <br/>\r\n                          Date must be valid and at least 10 working days into the future <br/>\r\n                          Size must be 11.5 to 15 including half sizes <br/>\r\n                          Quantity must be in multiples of 1000 <br/>\r\n                        </h6>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n             : <></>\r\n          }\r\n          </>\r\n        }\r\n    </>)\r\n};"]},"metadata":{},"sourceType":"module"}