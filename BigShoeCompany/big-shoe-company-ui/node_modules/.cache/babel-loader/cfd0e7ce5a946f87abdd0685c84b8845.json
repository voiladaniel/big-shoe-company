{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel.voila\\\\source\\\\repos\\\\BigShoeCompany\\\\big-shoe-company-ui\\\\src\\\\Helpers\\\\BasicUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicUpload = () => {\n  _s();\n\n  const [errorLogin, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  let formData = new FormData();\n  acceptedFiles.map(file => {\n    console.log(file);\n    formData.append(\"formFile\", file);\n    formData.append(\"fileName\", file.name);\n  });\n\n  const uploadFile = async e => {\n    try {\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData);\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  const processFile = async () => {\n    if (!isLoading) {\n      setIsLoading(true);\n\n      try {\n        const result = await axios(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData).then(function (response) {\n          setIsLoading(false);\n        }).catch(function (error) {\n          if (!error.status) {\n            try {\n              const {\n                status\n              } = error.response;\n              if (status == 401) error.message = 'Unauthorized access! Please contact the Administrator!';\n            } catch {\n              setError(error);\n              setIsLoading(false);\n            } finally {\n              setError(error);\n              setIsLoading(false);\n            }\n          } else {}\n        });\n      } catch (e) {\n        setError(e);\n        setIsLoading(false);\n        console.log(e);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop Order xml file here, or click to select file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"File selected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: processFile,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \"\\xA0 UploadFile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicUpload, \"EFOI/BGe2t+0YnP2s7W4/JvQFwM=\", false, function () {\n  return [useDropzone];\n});\n\n_c = BasicUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicUpload\");","map":{"version":3,"sources":["C:/Users/daniel.voila/source/repos/BigShoeCompany/big-shoe-company-ui/src/Helpers/BasicUpload.js"],"names":["React","useState","useDropzone","axios","Button","FontAwesomeIcon","faUpload","BasicUpload","errorLogin","setError","isLoading","setIsLoading","acceptedFiles","getRootProps","getInputProps","multiple","files","map","file","path","size","formData","FormData","console","log","append","name","uploadFile","e","res","post","ex","processFile","result","then","response","catch","error","status","message","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport axios from \"axios\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const BasicUpload = () => {\r\n  const [errorLogin, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({ multiple: false });\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  let formData = new FormData()\r\n  \r\n  acceptedFiles.map(file => {\r\n    console.log(file)\r\n    formData.append(\"formFile\", file);\r\n    formData.append(\"fileName\", file.name);\r\n  })\r\n  \r\n  const uploadFile = async (e) => {\r\n    try {\r\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData);\r\n      console.log(res);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  };\r\n  \r\n  const processFile = async () => {\r\n    if(!isLoading) {\r\n        setIsLoading(true);\r\n        try {\r\n            const result = await axios(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData)\r\n            .then(function (response) {\r\n                setIsLoading(false);\r\n            })\r\n            .catch(function(error) {\r\n                if (!error.status) {\r\n                    try{\r\n                        const {status} = error.response;\r\n                        if(status == 401)\r\n                             error.message = 'Unauthorized access! Please contact the Administrator!'\r\n                    }\r\n                    catch{\r\n                        setError(error);\r\n                        setIsLoading(false);\r\n                    }\r\n                    finally{\r\n                        setError(error);\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n                else{\r\n                    \r\n                }\r\n            });\r\n            \r\n        } catch (e) {\r\n            setError(e);\r\n            setIsLoading(false);\r\n            console.log(e);\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop Order xml file here, or click to select file</p>\r\n      </div>\r\n      <aside>\r\n        <h4>File selected:</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n      <Button variant=\"warning\" onClick={processFile}> \r\n        <FontAwesomeIcon icon={faUpload} />\r\n        &nbsp;\r\n        UploadFile\r\n      </Button>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}