{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel.voila\\\\source\\\\repos\\\\BigShoeCompany\\\\big-shoe-company-ui\\\\src\\\\Helpers\\\\BasicUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Orders } from '../Components/Orders';\nimport ReactToPrint from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicUpload = () => {\n  _s();\n\n  const [errorValidation, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [fileSelected, setFileSelected] = useState(false);\n  const [processedOrders, setProcessedOrders] = useState([]);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileText\",\n    children: file.path\n  }, file.path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n  let formData = new FormData();\n  acceptedFiles.map(file => {\n    formData.append(\"formFile\", file);\n    formData.append(\"fileName\", file.name); //setFileSelected(true);\n  });\n  const componentRef = useRef();\n\n  const uploadFile = async e => {\n    try {\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData).then(function (response) {\n        setProcessedOrders(response.data);\n        setError(false);\n        setIsLoading(false);\n      }).catch(function (error) {\n        if (!error.status) {\n          try {\n            const {\n              status\n            } = error.response;\n            if (status == 401) error.message = 'Unauthorized access! Please contact the Administrator!';\n          } catch {\n            setProcessedOrders([]);\n            setError(error);\n            setIsLoading(false);\n          } finally {\n            setProcessedOrders([]);\n            setError(error);\n            setIsLoading(false);\n          }\n        } else {}\n      });\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone use-pointer'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop Order xml file here, or click to select file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"File selected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: uploadFile,\n      className: \"use-pointer\",\n      disabled: !files.length > 0,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \"\\xA0 Upload Custom Order\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactToPrint, {\n      trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Print this out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }, this),\n      content: () => componentRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Orders, {\n      processedOrders: processedOrders,\n      errorValidation: errorValidation,\n      ref: componentRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicUpload, \"VM8jdHbZ/b+PIyL+40qXwjs4TdU=\", false, function () {\n  return [useDropzone];\n});\n\n_c = BasicUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicUpload\");","map":{"version":3,"sources":["C:/Users/daniel.voila/source/repos/BigShoeCompany/big-shoe-company-ui/src/Helpers/BasicUpload.js"],"names":["React","useState","useRef","useDropzone","axios","Button","FontAwesomeIcon","faUpload","Orders","ReactToPrint","BasicUpload","errorValidation","setError","isLoading","setIsLoading","fileSelected","setFileSelected","processedOrders","setProcessedOrders","acceptedFiles","getRootProps","getInputProps","multiple","files","map","file","path","formData","FormData","append","name","componentRef","uploadFile","e","res","post","then","response","data","catch","error","status","message","console","log","ex","className","length","current"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport axios from \"axios\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport { Orders } from '../Components/Orders';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nexport const BasicUpload = () => {\r\n  const [errorValidation, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fileSelected, setFileSelected] = useState(false);\r\n  const [processedOrders, setProcessedOrders] = useState([]);\r\n\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({ multiple: false });\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <div key={file.path} className=\"fileText\">\r\n      {file.path}\r\n    </div>\r\n  ));\r\n\r\n  let formData = new FormData()\r\n  \r\n  acceptedFiles.map(file => {\r\n    formData.append(\"formFile\", file);\r\n    formData.append(\"fileName\", file.name);\r\n    //setFileSelected(true);\r\n  })\r\n\r\n  const componentRef = useRef();\r\n\r\n  const uploadFile = async (e) => {\r\n    try {\r\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData)\r\n      .then(function (response) {\r\n        setProcessedOrders(response.data);\r\n        setError(false);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function(error) {\r\n        if (!error.status) {\r\n            try{\r\n                const {status} = error.response;\r\n                if(status == 401)\r\n                     error.message = 'Unauthorized access! Please contact the Administrator!'\r\n            }\r\n            catch{\r\n                setProcessedOrders([]);\r\n                setError(error);\r\n                setIsLoading(false);\r\n            }\r\n            finally{\r\n              setProcessedOrders([]);\r\n                setError(error);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        else{\r\n            \r\n        }\r\n      });\r\n      console.log(res);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone use-pointer'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop Order xml file here, or click to select file</p>\r\n      </div>\r\n      <aside>\r\n        <h4>File selected:</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n      <Button variant=\"warning\" onClick={uploadFile} className=\"use-pointer\" disabled={!files.length > 0}> \r\n        <FontAwesomeIcon icon={faUpload} />\r\n        &nbsp;\r\n        Upload Custom Order\r\n      </Button>\r\n      <ReactToPrint\r\n        trigger={() => <button>Print this out!</button>}\r\n        content={() => componentRef.current}\r\n      />\r\n      <Orders processedOrders={processedOrders} errorValidation={errorValidation} ref={componentRef}/>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}