{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daniel.voila\\\\source\\\\repos\\\\BigShoeCompany\\\\big-shoe-company-ui\\\\src\\\\Helpers\\\\BasicUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from \"axios\";\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BasicUpload = () => {\n  _s();\n\n  const [errorValidation, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [processedOrders, setProcessedOrders] = useState([]);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  let formData = new FormData();\n  acceptedFiles.map(file => {\n    console.log(file);\n    formData.append(\"formFile\", file);\n    formData.append(\"fileName\", file.name);\n  });\n\n  const uploadFile = async e => {\n    try {\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData).then(function (response) {\n        setProcessedOrders(response.data);\n        setIsLoading(false);\n      }).catch(function (error) {\n        if (!error.status) {\n          try {\n            const {\n              status\n            } = error.response;\n            if (status == 401) error.message = 'Unauthorized access! Please contact the Administrator!';\n          } catch {\n            setProcessedOrders([]);\n            setError(error);\n            setIsLoading(false);\n          } finally {\n            setProcessedOrders([]);\n            setError(error);\n            setIsLoading(false);\n          }\n        } else {}\n      });\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop Order xml file here, or click to select file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"File selected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: uploadFile,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \"\\xA0 Upload Custom Order\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), processedOrders.length ? processedOrders.map(orders => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError ? \"green-background\" : \"red-background\"),\n        onClick: () => console.log(\"da\"),\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Customer Name: \", orders.customerName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 60\n          }, this), \"Customer Email: \", orders.customerEmail, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 62\n          }, this), \"Date Required: \", orders.dateRequired, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 60\n          }, this), \"Notes: \", orders.notes, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }, this), \"Quantity: \", orders.quantity, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 51\n          }, this), \"Size: \", orders.size, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 43\n          }, this), orders.hasDateError ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Please enter a valid date!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), errorValidation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError ? \"green-background\" : \"red-background\"),\n        onClick: () => console.log(\"da\"),\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Validation Error! Please make sure you follow the guideline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 28\n          }, this), \"Customer Name must be provided \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 54\n          }, this), \"Customer Email must be a valid email address \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 68\n          }, this), \"Date must be valid and at least 10 working days into the future \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 87\n          }, this), \"Size must be 11.5 to 15 including half sizes \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 68\n          }, this), \"Quantity must be in multiples of 1000 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicUpload, \"G5SBcy/zSaCX8mn+Trk7HvYYB+g=\", false, function () {\n  return [useDropzone];\n});\n\n_c = BasicUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicUpload\");","map":{"version":3,"sources":["C:/Users/daniel.voila/source/repos/BigShoeCompany/big-shoe-company-ui/src/Helpers/BasicUpload.js"],"names":["React","useState","useDropzone","axios","Button","FontAwesomeIcon","faUpload","BasicUpload","errorValidation","setError","isLoading","setIsLoading","processedOrders","setProcessedOrders","acceptedFiles","getRootProps","getInputProps","multiple","files","map","file","path","size","formData","FormData","console","log","append","name","uploadFile","e","res","post","then","response","data","catch","error","status","message","ex","className","length","orders","hasDateError","customerName","customerEmail","dateRequired","notes","quantity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,QAAlB,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM;AAACa,IAAAA,aAAD;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAA+Cd,WAAW,CAAC;AAAEe,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAhE;AAEA,QAAMC,KAAK,GAAGJ,aAAa,CAACK,GAAd,CAAkBC,IAAI,iBAClC;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAMA,MAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAV,EAAAA,aAAa,CAACK,GAAd,CAAkBC,IAAI,IAAI;AACxBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAG,IAAAA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,EAA4BP,IAA5B;AACAG,IAAAA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,EAA4BP,IAAI,CAACQ,IAAjC;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,IAAN,CAAW,gDAAX,EAA6DT,QAA7D,EACjBU,IADiB,CACZ,UAAUC,QAAV,EAAoB;AACxBrB,QAAAA,kBAAkB,CAACqB,QAAQ,CAACC,IAAV,CAAlB;AACAxB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJiB,EAKjByB,KALiB,CAKX,UAASC,KAAT,EAAgB;AACrB,YAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf,cAAG;AACC,kBAAM;AAACA,cAAAA;AAAD,gBAAWD,KAAK,CAACH,QAAvB;AACA,gBAAGI,MAAM,IAAI,GAAb,EACKD,KAAK,CAACE,OAAN,GAAgB,wDAAhB;AACR,WAJD,CAKA,MAAK;AACD1B,YAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAJ,YAAAA,QAAQ,CAAC4B,KAAD,CAAR;AACA1B,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,WATD,SAUO;AACLE,YAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACEJ,YAAAA,QAAQ,CAAC4B,KAAD,CAAR;AACA1B,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,SAhBD,MAiBI,CAEH;AACF,OA1BiB,CAAlB;AA2BAc,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KA7BD,CA6BE,OAAOS,EAAP,EAAW;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAYc,EAAZ;AACD;AACF,GAjCD;;AAmCA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,oBAASzB,YAAY,CAAC;AAAC0B,QAAAA,SAAS,EAAE;AAAZ,OAAD,CAArB;AAAA,8BACE,sBAAWzB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEW,UAAnC;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEvB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAcIM,eAAe,CAAC8B,MAAhB,GACA9B,eAAe,CAACO,GAAhB,CAAoBwB,MAAM,iBACxB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,sEAAsE,CAACA,MAAM,CAACC,YAAR,GAAwB,kBAAxB,GAA6C,gBAAnH,CAAhB;AAAuJ,QAAA,OAAO,EAAE,MAAMnB,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAtK;AAAA,+BACM;AAAA,wCACoBiB,MAAM,CAACE,YAD3B,oBACyC;AAAA;AAAA;AAAA;AAAA,kBADzC,sBAEqBF,MAAM,CAACG,aAF5B,oBAE2C;AAAA;AAAA;AAAA;AAAA,kBAF3C,qBAGoBH,MAAM,CAACI,YAH3B,oBAGyC;AAAA;AAAA;AAAA;AAAA,kBAHzC,aAIYJ,MAAM,CAACK,KAJnB,oBAI0B;AAAA;AAAA;AAAA;AAAA,kBAJ1B,gBAKeL,MAAM,CAACM,QALtB,oBAKgC;AAAA;AAAA;AAAA;AAAA,kBALhC,YAMWN,MAAM,CAACrB,IANlB,oBAMwB;AAAA;AAAA;AAAA;AAAA,kBANxB,EAOKqB,MAAM,CAACC,YAAP,gBACL;AAAA,oCAAE;AAAA;AAAA;AAAA;AAAA,oBAAF,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAAA,0BADK,gBAC2C,qCARhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADA,gBAiBK,qCA/BT,EAiCKpC,eAAe,gBACd;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,sEAAsE,CAACmC,MAAM,CAACC,YAAR,GAAwB,kBAAxB,GAA6C,gBAAnH,CAAhB;AAAuJ,QAAA,OAAO,EAAE,MAAMnB,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAtK;AAAA,+BACM;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADT,kDAEmC;AAAA;AAAA;AAAA;AAAA,kBAFnC,gEAGiD;AAAA;AAAA;AAAA;AAAA,kBAHjD,mFAIoE;AAAA;AAAA;AAAA;AAAA,kBAJpE,gEAKiD;AAAA;AAAA;AAAA;AAAA,kBALjD,yDAM0C;AAAA;AAAA;AAAA;AAAA,kBAN1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADc,gBAcb,qCA/CP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CA5GM;;GAAMnB,W;UAK0CL,W;;;KAL1CK,W","sourcesContent":["import React, { useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport axios from \"axios\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const BasicUpload = () => {\r\n  const [errorValidation, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [processedOrders, setProcessedOrders] = useState([]);\r\n\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({ multiple: false });\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  let formData = new FormData()\r\n  \r\n  acceptedFiles.map(file => {\r\n    console.log(file)\r\n    formData.append(\"formFile\", file);\r\n    formData.append(\"fileName\", file.name);\r\n  })\r\n  \r\n  const uploadFile = async (e) => {\r\n    try {\r\n      const res = await axios.post(\"https://localhost:44387/api/xml/ProcessXmlFile\", formData)\r\n      .then(function (response) {\r\n        setProcessedOrders(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function(error) {\r\n        if (!error.status) {\r\n            try{\r\n                const {status} = error.response;\r\n                if(status == 401)\r\n                     error.message = 'Unauthorized access! Please contact the Administrator!'\r\n            }\r\n            catch{\r\n                setProcessedOrders([]);\r\n                setError(error);\r\n                setIsLoading(false);\r\n            }\r\n            finally{\r\n              setProcessedOrders([]);\r\n                setError(error);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        else{\r\n            \r\n        }\r\n      });\r\n      console.log(res);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop Order xml file here, or click to select file</p>\r\n      </div>\r\n      <aside>\r\n        <h4>File selected:</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n      <Button variant=\"warning\" onClick={uploadFile}> \r\n        <FontAwesomeIcon icon={faUpload} />\r\n        &nbsp;\r\n        Upload Custom Order\r\n      </Button>\r\n      { processedOrders.length?\r\n        processedOrders.map(orders => (\r\n          <div className=\"row\">\r\n            <div className={\"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError  ? \"green-background\" : \"red-background\")}  onClick={() => console.log(\"da\")}>\r\n                  <h6>\r\n                      Customer Name: {orders.customerName} <br/>\r\n                      Customer Email: {orders.customerEmail} <br/>\r\n                      Date Required: {orders.dateRequired} <br/>\r\n                      Notes: {orders.notes} <br/>\r\n                      Quantity: {orders.quantity} <br/>  \r\n                      Size: {orders.size} <br/>\r\n                      {orders.hasDateError  ? \r\n                  <><br/><h2>Please enter a valid date!</h2></> : <></>}\r\n                  </h6>\r\n\r\n              </div>\r\n          </div>\r\n        )) : <></>\r\n      }\r\n       { errorValidation?\r\n          <div className=\"row\">\r\n            <div className={\"col-lg-12 col-md-12 text-center custom-div-template use-pointer \" + (!orders.hasDateError  ? \"green-background\" : \"red-background\")}  onClick={() => console.log(\"da\")}>\r\n                  <h6>\r\n                      <br/><h2>Validation Error! Please make sure you follow the guideline:</h2>\r\n                      Customer Name must be provided <br/>\r\n                      Customer Email must be a valid email address <br/>\r\n                      Date must be valid and at least 10 working days into the future <br/>\r\n                      Size must be 11.5 to 15 including half sizes <br/>\r\n                      Quantity must be in multiples of 1000 <br/>\r\n                  </h6>\r\n\r\n              </div>\r\n          </div>\r\n         : <></>\r\n      }\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}